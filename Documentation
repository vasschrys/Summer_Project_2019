///////////////////////////////////////////////////////////////////////////////
SUMMER PROJECT
TEAM
Basit
Lia
Shiho



Meeting: Monday's 10pm

TASKS

6/7/2019
Research on school websites. We would be scraping data from these websites. We should focus on schools in the lehigh valley( Lafayette, Lehigh, Muhlenberg.


//////////////////////////////////////////////Instructions for setup
Install Python
Install atom
Install scripts inside of atom
Add python.exe to path so you can run python files directly from command line
Install pip System package manager for easy Installation of python packages. https://projects.raspberrypi.org/en/projects/using-pip-on-windows/5
install selenium https://pypi.org/project/selenium/
download webdriver and add it to path or manually add it to path
install beautifulsoup4 which would be used for scraping
Install MongoDB - https://www.mongodb.com/download-center/community
Install Pymongo 3.8.0 https://realpython.com/introduction-to-mongodb-and-python/
Intall dnspython using pip
Note I am storing the database on my mongodb cluster.
I created a react app in courses-website-app  - ask me about this
Install bootstrap using npm install bootstrap in the same folder
Install material ui  https://material-ui.com/getting-started/installation/
Install react-router-dom
Installed express body-parser cors and mongoose in the backend folder
install global package 







https://oasis.farmingdale.edu/banner/bwckschd.p_disp_dyn_sched
https://oxford.blinn.edu:9010/PROD/bwckschd.p_disp_dyn_sched
https://ssb.ship.edu/prod/bwckschd.p_disp_dyn_sched



Shiho Make detailed class diagrem
	-user input output


https://github.com/ryanhugh/searchneu

Next.js   ui side
express.js     api side
AWS


pbcopy < ~/.ssh/id_rsa.pub
git clone git@github.com:vasschrys/Summer_Project_2019.git
yes


Converstaion with wassim:
I actually wouldnt recommend you use the coursechief approach because it relies on the registrar providing a csv file of courses (that they can easily generate from banner but still take a long to time to respond every time)

what I recommend you do is directly parse the banner publicly accessible page by yourself
using a script (depending on which language you're using)
i do react with next.js on the ui side and express.js on the api side
and i use atom or vscode for IDE
if you're going javascript i recommend mongodb but if you wanna use sql that works too


This is the link wassim sent me the page is https://bannerselfservice.lafayette.edu/pls/bprod/bwckschd.p_disp_dyn_sched
